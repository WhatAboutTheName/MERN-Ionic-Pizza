{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { AUTONOTIFICATION } from '../action-types';\nimport { isAdmin, isLogin, userToken, userExpiresIn, userId } from '../actions/auth-actions';\nexport function* autonotificationWatcher() {\n  yield takeEvery(AUTONOTIFICATION, autonotificationWorker);\n}\n\nasync function autonotificationResp(action) {\n  console.log(action, 'generator'); // const res = await axios.post('/auth/login', {email: auth.email, password: auth.password});\n\n  return 'res';\n}\n\nfunction* autonotificationWorker(action) {\n  try {\n    const res = yield call(autonotificationResp, action);\n    put(isAdmin(res.data.admin));\n    put(isLogin(res.data.isLogin));\n    put(userToken(res.data.token));\n    put(userExpiresIn(res.data.expiresIn));\n    put(userId(res.data.userId));\n  } catch (e) {\n    throw e;\n  }\n} // export const logoutMethod = (Id: string) => async (dispatch: any) => {\n//     dispatch( isAdmin(false) );\n//     dispatch( isLogin(false) );\n//     dispatch( userToken('') );\n//     dispatch( userExpiresIn('0') );\n//     dispatch( userId('') );\n//     localStorage.removeItem('isLogin');\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('expiresIn');\n//     await axios.put('/auth/logout', {userId: Id});\n// }","map":{"version":3,"sources":["D:/проекты/React/Ionic-pizza/client/src/store/sagas/auth.ts"],"names":["takeEvery","put","call","AUTONOTIFICATION","isAdmin","isLogin","userToken","userExpiresIn","userId","autonotificationWatcher","autonotificationWorker","autonotificationResp","action","console","log","res","data","admin","token","expiresIn","e"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AAEA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,EAAsCC,aAAtC,EAAqDC,MAArD,QAAmE,yBAAnE;AAEA,OAAO,UAAUC,uBAAV,GAAoC;AACvC,QAAMT,SAAS,CAACG,gBAAD,EAAmBO,sBAAnB,CAAf;AACH;;AAGD,eAAeC,oBAAf,CAAqCC,MAArC,EAAkD;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,WAApB,EAD8C,CAE9C;;AACA,SAAO,KAAP;AACH;;AAED,UAAUF,sBAAV,CAAiCE,MAAjC,EAA8C;AAC1C,MAAI;AACA,UAAMG,GAAG,GAAG,MAAMb,IAAI,CAACS,oBAAD,EAA8BC,MAA9B,CAAtB;AACAX,IAAAA,GAAG,CAACG,OAAO,CAACW,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAR,CAAH;AACAhB,IAAAA,GAAG,CAACI,OAAO,CAACU,GAAG,CAACC,IAAJ,CAASX,OAAV,CAAR,CAAH;AACAJ,IAAAA,GAAG,CAACK,SAAS,CAACS,GAAG,CAACC,IAAJ,CAASE,KAAV,CAAV,CAAH;AACAjB,IAAAA,GAAG,CAACM,aAAa,CAACQ,GAAG,CAACC,IAAJ,CAASG,SAAV,CAAd,CAAH;AACAlB,IAAAA,GAAG,CAACO,MAAM,CAACO,GAAG,CAACC,IAAJ,CAASR,MAAV,CAAP,CAAH;AACH,GAPD,CAOE,OAAMY,CAAN,EAAS;AACP,UAAMA,CAAN;AACH;AACJ,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { axios } from '../../axios';\r\nimport { AUTONOTIFICATION } from '../action-types';\r\nimport { isAdmin, isLogin, userToken, userExpiresIn, userId } from '../actions/auth-actions';\r\n\r\nexport function* autonotificationWatcher() {\r\n    yield takeEvery(AUTONOTIFICATION, autonotificationWorker);\r\n}\r\n\r\n\r\nasync function autonotificationResp (action: any) {\r\n    console.log(action, 'generator')\r\n    // const res = await axios.post('/auth/login', {email: auth.email, password: auth.password});\r\n    return 'res';\r\n}\r\n\r\nfunction* autonotificationWorker(action: any) {\r\n    try {\r\n        const res = yield call(autonotificationResp as any, action);\r\n        put(isAdmin(res.data.admin));\r\n        put(isLogin(res.data.isLogin));\r\n        put(userToken(res.data.token));\r\n        put(userExpiresIn(res.data.expiresIn));\r\n        put(userId(res.data.userId));\r\n    } catch(e) {\r\n        throw e;\r\n    }\r\n}\r\n\r\n// export const logoutMethod = (Id: string) => async (dispatch: any) => {\r\n//     dispatch( isAdmin(false) );\r\n//     dispatch( isLogin(false) );\r\n//     dispatch( userToken('') );\r\n//     dispatch( userExpiresIn('0') );\r\n//     dispatch( userId('') );\r\n//     localStorage.removeItem('isLogin');\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('expiresIn');\r\n//     await axios.put('/auth/logout', {userId: Id});\r\n// }"]},"metadata":{},"sourceType":"module"}