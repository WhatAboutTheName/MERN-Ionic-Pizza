{"ast":null,"code":"import { axios } from \"../../axios\";\nimport { IS_ADMIN, IS_LOGIN, USER_TOKEN, USER_EXPIRES_IN, USER_ID, LOGOUT_METHOD } from \"../action-types\";\nexport const isAdmin = isAdmin => {\n  return {\n    type: IS_ADMIN,\n    payload: {\n      isAdmin: isAdmin\n    }\n  };\n};\nexport const isLogin = isLogin => {\n  localStorage.setItem('isLogin', isLogin.toString());\n  return {\n    type: IS_LOGIN,\n    payload: {\n      isLogin: isLogin\n    }\n  };\n};\nexport const userToken = token => {\n  localStorage.setItem('token', token.toString());\n  return {\n    type: USER_TOKEN,\n    payload: {\n      token: token\n    }\n  };\n};\nexport const userExpiresIn = expiresIn => {\n  localStorage.setItem('expiresIn', expiresIn.toString());\n  return {\n    type: USER_EXPIRES_IN,\n    payload: {\n      expiresIn: expiresIn\n    }\n  };\n};\nexport const userId = userId => {\n  return {\n    type: USER_ID,\n    payload: {\n      userId: userId\n    }\n  };\n};\nexport const autonotification = async (email, password) => {\n  const res = await axios.post('/auth/login', {\n    email: email,\n    password: password\n  });\n  return dispatch => {\n    console.log(res.data);\n    dispatch(isAdmin(res.data.admin));\n    dispatch(isLogin(res.data.isLogin));\n    dispatch(userToken(res.data.token));\n    dispatch(userExpiresIn(res.data.expiresIn));\n    dispatch(userId(res.data.userId));\n  };\n};\nexport const logoutMethod = async userId => {\n  localStorage.removeItem('isLogin');\n  localStorage.removeItem('token');\n  localStorage.removeItem('expiresIn');\n  const res = await axios.put('/user/logout', {\n    userId: userId\n  });\n  return {\n    type: LOGOUT_METHOD,\n    payload: {\n      message: res.data.message\n    }\n  };\n};","map":{"version":3,"sources":["D:/проекты/React/Ionic-pizza/client/src/store/actions/auth-actions.ts"],"names":["axios","IS_ADMIN","IS_LOGIN","USER_TOKEN","USER_EXPIRES_IN","USER_ID","LOGOUT_METHOD","isAdmin","type","payload","isLogin","localStorage","setItem","toString","userToken","token","userExpiresIn","expiresIn","userId","autonotification","email","password","res","post","dispatch","console","log","data","admin","logoutMethod","removeItem","put","message"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,eAAzC,EAA0DC,OAA1D,EAAmEC,aAAnE,QAAwF,iBAAxF;AAEA,OAAO,MAAMC,OAAO,GAAIA,OAAD,IAAsB;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAEP,QADH;AAEHQ,IAAAA,OAAO,EAAE;AACLF,MAAAA,OAAO,EAAEA;AADJ;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAMG,OAAO,GAAIA,OAAD,IAAsB;AACzCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,OAAO,CAACG,QAAR,EAAhC;AACA,SAAO;AACHL,IAAAA,IAAI,EAAEN,QADH;AAEHO,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAEA;AADJ;AAFN,GAAP;AAMH,CARM;AAUP,OAAO,MAAMI,SAAS,GAAIC,KAAD,IAAmB;AACxCJ,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BG,KAAK,CAACF,QAAN,EAA9B;AACA,SAAO;AACHL,IAAAA,IAAI,EAAEL,UADH;AAEHM,IAAAA,OAAO,EAAE;AACLM,MAAAA,KAAK,EAAEA;AADF;AAFN,GAAP;AAMH,CARM;AAUP,OAAO,MAAMC,aAAa,GAAIC,SAAD,IAAuB;AAChDN,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCK,SAAS,CAACJ,QAAV,EAAlC;AACA,SAAO;AACHL,IAAAA,IAAI,EAAEJ,eADH;AAEHK,IAAAA,OAAO,EAAE;AACLQ,MAAAA,SAAS,EAAEA;AADN;AAFN,GAAP;AAMH,CARM;AAUP,OAAO,MAAMC,MAAM,GAAIA,MAAD,IAAoB;AACtC,SAAO;AACHV,IAAAA,IAAI,EAAEH,OADH;AAEHI,IAAAA,OAAO,EAAE;AACLS,MAAAA,MAAM,EAAEA;AADH;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAMC,gBAAgB,GAAG,OAAOC,KAAP,EAAsBC,QAAtB,KAA2C;AAEvE,QAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW,aAAX,EAA0B;AAACH,IAAAA,KAAK,EAAEA,KAAR;AAAeC,IAAAA,QAAQ,EAAEA;AAAzB,GAA1B,CAAlB;AACA,SAAQG,QAAD,IAAmB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AACAH,IAAAA,QAAQ,CAAEjB,OAAO,CAACe,GAAG,CAACK,IAAJ,CAASC,KAAV,CAAT,CAAR;AACAJ,IAAAA,QAAQ,CAAEd,OAAO,CAACY,GAAG,CAACK,IAAJ,CAASjB,OAAV,CAAT,CAAR;AACAc,IAAAA,QAAQ,CAAEV,SAAS,CAACQ,GAAG,CAACK,IAAJ,CAASZ,KAAV,CAAX,CAAR;AACAS,IAAAA,QAAQ,CAAER,aAAa,CAACM,GAAG,CAACK,IAAJ,CAASV,SAAV,CAAf,CAAR;AACAO,IAAAA,QAAQ,CAAEN,MAAM,CAACI,GAAG,CAACK,IAAJ,CAAST,MAAV,CAAR,CAAR;AACH,GAPD;AAQH,CAXM;AAaP,OAAO,MAAMW,YAAY,GAAG,MAAOX,MAAP,IAA0B;AAClDP,EAAAA,YAAY,CAACmB,UAAb,CAAwB,SAAxB;AACAnB,EAAAA,YAAY,CAACmB,UAAb,CAAwB,OAAxB;AACAnB,EAAAA,YAAY,CAACmB,UAAb,CAAwB,WAAxB;AACA,QAAMR,GAAG,GAAG,MAAMtB,KAAK,CAAC+B,GAAN,CAAU,cAAV,EAA0B;AAACb,IAAAA,MAAM,EAAEA;AAAT,GAA1B,CAAlB;AACA,SAAO;AACHV,IAAAA,IAAI,EAAEF,aADH;AAEHG,IAAAA,OAAO,EAAE;AACLuB,MAAAA,OAAO,EAAEV,GAAG,CAACK,IAAJ,CAASK;AADb;AAFN,GAAP;AAMH,CAXM","sourcesContent":["import { axios } from \"../../axios\";\r\nimport { IS_ADMIN, IS_LOGIN, USER_TOKEN, USER_EXPIRES_IN, USER_ID, LOGOUT_METHOD } from \"../action-types\";\r\n\r\nexport const isAdmin = (isAdmin: boolean) => {\r\n    return {\r\n        type: IS_ADMIN,\r\n        payload: {\r\n            isAdmin: isAdmin\r\n        }\r\n    }\r\n}\r\n\r\nexport const isLogin = (isLogin: boolean) => {\r\n    localStorage.setItem('isLogin', isLogin.toString());\r\n    return {\r\n        type: IS_LOGIN,\r\n        payload: {\r\n            isLogin: isLogin\r\n        }\r\n    }\r\n}\r\n\r\nexport const userToken = (token: string) => {\r\n    localStorage.setItem('token', token.toString());\r\n    return {\r\n        type: USER_TOKEN,\r\n        payload: {\r\n            token: token\r\n        }\r\n    }\r\n}\r\n\r\nexport const userExpiresIn = (expiresIn: string) => {\r\n    localStorage.setItem('expiresIn', expiresIn.toString());\r\n    return {\r\n        type: USER_EXPIRES_IN,\r\n        payload: {\r\n            expiresIn: expiresIn\r\n        }\r\n    }\r\n}\r\n\r\nexport const userId = (userId: string) => {\r\n    return {\r\n        type: USER_ID,\r\n        payload: {\r\n            userId: userId\r\n        }\r\n    }\r\n}\r\n\r\nexport const autonotification = async (email: string, password: string) => {\r\n    \r\n    const res = await axios.post('/auth/login', {email: email, password: password});\r\n    return (dispatch: any) => {\r\n        console.log(res.data);\r\n        dispatch( isAdmin(res.data.admin) );\r\n        dispatch( isLogin(res.data.isLogin) );\r\n        dispatch( userToken(res.data.token) );\r\n        dispatch( userExpiresIn(res.data.expiresIn) );\r\n        dispatch( userId(res.data.userId) );\r\n    }\r\n}\r\n\r\nexport const logoutMethod = async (userId: string) => {\r\n    localStorage.removeItem('isLogin');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiresIn');\r\n    const res = await axios.put('/user/logout', {userId: userId});\r\n    return {\r\n        type: LOGOUT_METHOD,\r\n        payload: {\r\n            message: res.data.message\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}