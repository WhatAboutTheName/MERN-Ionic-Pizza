{"ast":null,"code":"import { axios } from \"../../axios\";\nimport { IS_ADMIN, IS_LOGIN, USER_TOKEN, USER_EXPIRES_IN, USER_ID } from \"../action-types\";\nexport const isAdmin = isAdmin => {\n  return {\n    type: IS_ADMIN,\n    payload: {\n      isAdmin: isAdmin\n    }\n  };\n};\nexport const isLogin = isLogin => {\n  localStorage.setItem('isLogin', isLogin.toString());\n  return {\n    type: IS_LOGIN,\n    payload: {\n      isLogin: isLogin\n    }\n  };\n};\nexport const userToken = token => {\n  localStorage.setItem('token', token.toString());\n  return {\n    type: USER_TOKEN,\n    payload: {\n      token: token\n    }\n  };\n};\nexport const userExpiresIn = expiresIn => {\n  localStorage.setItem('expiresIn', expiresIn.toString());\n  return {\n    type: USER_EXPIRES_IN,\n    payload: {\n      expiresIn: expiresIn\n    }\n  };\n};\nexport const userId = userId => {\n  return {\n    type: USER_ID,\n    payload: {\n      userId: userId\n    }\n  };\n};\nexport const autonotification = (email, password) => async dispatch => {\n  const res = await axios.post('/auth/login', {\n    email: email,\n    password: password\n  });\n  dispatch(isAdmin(res.data.admin));\n  dispatch(isLogin(res.data.isLogin));\n  dispatch(userToken(res.data.token));\n  dispatch(userExpiresIn(res.data.expiresIn));\n  dispatch(userId(res.data.userId));\n};\nexport const logoutMethod = Id => async dispatch => {\n  dispatch(isAdmin(false));\n  dispatch(isLogin(false));\n  dispatch(userToken(''));\n  dispatch(userExpiresIn('0'));\n  dispatch(userId(''));\n  localStorage.removeItem('isLogin');\n  localStorage.removeItem('token');\n  localStorage.removeItem('expiresIn');\n  await axios.put('/auth/logout', {\n    userId: Id\n  });\n};","map":{"version":3,"sources":["D:/проекты/React/Ionic-pizza/client/src/store/actions/auth-actions.ts"],"names":["axios","IS_ADMIN","IS_LOGIN","USER_TOKEN","USER_EXPIRES_IN","USER_ID","isAdmin","type","payload","isLogin","localStorage","setItem","toString","userToken","token","userExpiresIn","expiresIn","userId","autonotification","email","password","dispatch","res","post","data","admin","logoutMethod","Id","removeItem","put"],"mappings":"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","sourcesContent":["import { axios } from \"../../axios\";\r\nimport { IS_ADMIN, IS_LOGIN, USER_TOKEN, USER_EXPIRES_IN, USER_ID } from \"../action-types\";\r\n\r\nexport const isAdmin = (isAdmin: boolean) => {\r\n    return {\r\n        type: IS_ADMIN,\r\n        payload: {\r\n            isAdmin: isAdmin\r\n        }\r\n    }\r\n}\r\n\r\nexport const isLogin = (isLogin: boolean) => {\r\n    localStorage.setItem('isLogin', isLogin.toString());\r\n    return {\r\n        type: IS_LOGIN,\r\n        payload: {\r\n            isLogin: isLogin\r\n        }\r\n    }\r\n}\r\n\r\nexport const userToken = (token: string) => {\r\n    localStorage.setItem('token', token.toString());\r\n    return {\r\n        type: USER_TOKEN,\r\n        payload: {\r\n            token: token\r\n        }\r\n    }\r\n}\r\n\r\nexport const userExpiresIn = (expiresIn: string) => {\r\n    localStorage.setItem('expiresIn', expiresIn.toString());\r\n    return {\r\n        type: USER_EXPIRES_IN,\r\n        payload: {\r\n            expiresIn: expiresIn\r\n        }\r\n    }\r\n}\r\n\r\nexport const userId = (userId: string) => {\r\n    return {\r\n        type: USER_ID,\r\n        payload: {\r\n            userId: userId\r\n        }\r\n    }\r\n}\r\n\r\nexport const autonotification = (email: string, password: string) => async (dispatch: any) => {\r\n    const res = await axios.post('/auth/login', {email: email, password: password});\r\n    dispatch( isAdmin(res.data.admin) );\r\n    dispatch( isLogin(res.data.isLogin) );\r\n    dispatch( userToken(res.data.token) );\r\n    dispatch( userExpiresIn(res.data.expiresIn) );\r\n    dispatch( userId(res.data.userId) );\r\n}\r\n\r\nexport const logoutMethod = (Id: string) => async (dispatch: any) => {\r\n    dispatch( isAdmin(false) );\r\n    dispatch( isLogin(false) );\r\n    dispatch( userToken('') );\r\n    dispatch( userExpiresIn('0') );\r\n    dispatch( userId('') );\r\n    localStorage.removeItem('isLogin');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiresIn');\r\n    await axios.put('/auth/logout', {userId: Id});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}